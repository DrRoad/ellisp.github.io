<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>Peter&#39;s stats stuff</title>
		<description>I write about applications of data and analytical techniques like statistical modelling and simulation to real-world situations. I show how to access and use data, and provide examples of analytical products and the code that produced them.</description>		
		<link>http://ellisp.github.io</link>
		<atom:link href="http://ellisp.github.io/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>How to compare two blackbox timeseries generators?</title>
				        
				
					<description>A brute force method for comparing whether two data generating black boxes that produce time series are the same process or not. Basically, you need to use each black box to generate many instances, calculate the average result of the first black box at each point of time, and see if the instances generated by the second black box are noticeably more different from that average than are instances generated by the first.</description>
				
				<pubDate>Sun, 20 Sep 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/09/20/timeseries-differences</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/09/20/timeseries-differences</guid>
			</item>
		
			<item>
				<title>Autocorrelation functions of materially different time series</title>
				        
				
					<description>Time series can have identical or similar autocorrelation functions but differ in important ways that may be material to your question of interest.</description>
				
				<pubDate>Sat, 19 Sep 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/09/19/timeseries-same-acf</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/09/19/timeseries-same-acf</guid>
			</item>
		
			<item>
				<title>Sampling distribution of Gini coefficient</title>
				        
				
					<description>I explore the sampling distributions of estimates of Gini coefficients from a sample, using the New Zealand Income Survey 2011.  At the actual sample size of nearly 30,000, sampling error is negligible, and as low as a sample size of 1,000 a 95% confidence interval is (0.48, 0.55), precise enough for most purposes and certainly good enough given the non-sampling vagaries of the underlying data.  I discuss why individual and weekly income data - which is all I have to hand - returns a higher measure of inequality than does annual household income, the more usual and internationally-comparable (and completely valid) measure.</description>
				
				<pubDate>Sat, 12 Sep 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/09/12/inequality-stats-distributions</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/09/12/inequality-stats-distributions</guid>
			</item>
		
			<item>
				<title>Transforming the breaks to match a scale</title>
				        
				
					<description>I follow up my ggplot2 version of John and Draper&#39;s modulus transformation from my last post. The default for creating new transformations using the {scales} package places the breaks for gridlines and labels in the scale at regular intervals on the original untransformed scale; I explore how to adjust for this.</description>
				
				<pubDate>Mon, 07 Sep 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/09/07/transforming-breaks-in-a-scale</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/09/07/transforming-breaks-in-a-scale</guid>
			</item>
		
			<item>
				<title>Creating a scale transformation</title>
				        
				
					<description>It&#39;s easy to define a new transformation with Hadley Wickham&#39;s {scales} package, and I do this for John and Draper&#39;s modulus transform proposed in 1980 as a way of dealing with data with zero and negative values where logarithmic or Box-Cox transformations fail.  This makes it easy to integrate this useful transformation, which works for negative numbers and is continuous through zero, into graphical data analysis.</description>
				
				<pubDate>Sat, 05 Sep 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/09/05/creating-a-scale-transformation</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/09/05/creating-a-scale-transformation</guid>
			</item>
		
			<item>
				<title>Getting started in applied statistics / datascience</title>
				        
				
					<description>If you want to be a data scientist or applied statistician, you need to study statistics, learn to write code, and learn *how* to learn (as lots of stuff seems to me to get out of date on a six month cycle).   This post doesn&#39;t have any short cuts, but as consolation I do show how to draw with R a variant of Drew Conway&#39;s famous Data Science Venn Diagram.</description>
				
				<pubDate>Sun, 30 Aug 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/08/30/starting-in-datascience</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/08/30/starting-in-datascience</guid>
			</item>
		
			<item>
				<title>A better way of visualising income distributions with zeroes and negatives</title>
				        
				
					<description>I demonstrate a better way of visualising income distributions when they include zero and negative values rather than just putting them on a logarithmic scale and dropping the inconvenient values.  I use a modified power transformation, which applies a transformation like square root to the absolute value of the original variable and then restores the sign.  I apply the method to the New Zealand Income Survey 2011 data.</description>
				
				<pubDate>Fri, 21 Aug 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/08/21/visualising-distributions</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/08/21/visualising-distributions</guid>
			</item>
		
			<item>
				<title>Importing the New Zealand Income Survey SURF</title>
				        
				
					<description>I tidy up the publicly available simulated unit record file (SURF) of the New Zealand Income Survey 2011, import into a database, and explore income distributions, visualising the lower distribution of weekly incomes New Zealanders of Maori and Pacific Islander ethnicity.  Along the way I create a function to identify modes in a multi-modal distribution.</description>
				
				<pubDate>Sat, 15 Aug 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/08/15/importing-nzis-surf</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/08/15/importing-nzis-surf</guid>
			</item>
		
			<item>
				<title>Simulating backgammon players&#39; Elo ratings</title>
				        
				
					<description>I show how to convert from the Elo ratings of a backgammon player and their opponent and match length to the theoretical probability of winning.  I simulate a simple two player backgammon forum to show how Elo ratings vary at random around players &#39;true&#39; skill level.  Along the way, I demonstrate making animated graphics for a webpage.</description>
				
				<pubDate>Fri, 07 Aug 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/08/07/fibs-elo-ratings-basics</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/08/07/fibs-elo-ratings-basics</guid>
			</item>
		
			<item>
				<title>New Zealand Data &amp; APIs on GitHub</title>
				        
				
					<description>I discuss a new listing of datasets in New Zealand, and demonstrate tidying up a publicly available dataset on number of welfare beneficiaries for use in an interactive web application.</description>
				
				<pubDate>Sat, 01 Aug 2015 00:00:00 +1200</pubDate>
				<link>http://ellisp.github.io/blog/2015/08/01/new-zealand-data-on-github</link>
				<guid isPermaLink="true">http://ellisp.github.io/blog/2015/08/01/new-zealand-data-on-github</guid>
			</item>
		
	</channel>
</rss>